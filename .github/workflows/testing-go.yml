on:
  workflow_call:
    inputs:
      go_version:
        description: 'The Go version to download (if necessary) and use.'
        required: true
        type: string
      test_flags:
        description: 'The test binary also accepts flags that control execution of the test.'
        required: false
        type: string
      go_path:
        description: 'Testing the packages named by the paths.'
        required: false
        type: string
      go_test_directory:
        description: 'Testing the packages named by the paths.'
        required: false
        type: string
      golint_version:
        description: 'The version of golangci-lint to use in form of v1.2 or v1.2.3 or `latest` to use the latest version'
        required: false
        type: string
        default: 'latest'
      golint_args:
        description: 'golangci-lint command line arguments.'
        required: false
        type: string
      golint_path:
        description: 'Lint the packages named by the paths.'
        required: false
        type: string

jobs:
  golang:
    runs-on: [self-hosted, gke]

    steps:
      - id: 'gh-app'
        name: 'Get Token'
        uses: 'tibdex/github-app-token@021a2405c7f990db57f5eae5397423dcc554159c' #v1.7.0
        with:
          app_id: ${{ secrets.GH_APP_ID }}
          private_key: ${{ secrets.GH_PRIVATE_KEY }}
      - name: 'Setup creds'
        run: |
          git config --global url."https://x-access-token:${{ steps.gh-app.outputs.token }}@github.com".insteadOf "ssh://git@github.com"
      - name: 'Setup Go'
        uses: actions/setup-go@4d34df0c2316fe8122ab82dc22947d607c0c91f9 #v3.3.0
        with:
          go-version: '${{ inputs.go_version }}'

      - name: 'Checkout Repo'
        uses: actions/checkout@8f4b7f84864484a7bf31766abe9204da3cbe65b3 #v3.3.0

      - name: 'Go Lint'
        uses: golangci/golangci-lint-action@08e2f20817b15149a52b5b3ebe7de50aff2ba8c5 #v3.4.0
        with:
          version: '${{ inputs.golint_version }}'
          args: '${{ inputs.golint_args }}'
          working-directory: '${{ inputs.golint_path }}'

      - name: 'Test with the Go CLI'
        run: go test '${{ inputs.test_flags }}' '${{ inputs.go_path }}'
        working-directory: '${{ inputs.go_test_directory }}'
