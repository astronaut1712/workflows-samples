on:
  workflow_call:
    inputs:
      toolchain_version:
        description: 'The Rust toolchain version (ex: stable, nightly, 1.65, etc)'
        required: false
        type: string
        default: 'nightly'
      checkout_repository:
        required: false
        type: string
      checkout_submodules:
        required: false
        type: string
      unittest:
        required: false
        type: boolean
        default: false
      redis_image:
        description: 'Redis Image'
        default: 'redis'
        required: false
        type: string
      rust_build:
        required: false
        type: boolean
        default: false
    

jobs:
  lint-and-unittest:
    runs-on: [self-hosted, gke]

    services:
      redis:
        image: ${{ inputs.redis_image }}
        ports:
        - 6379:6379

    steps:
      - id: 'gh-app'
        name: 'Get Token'
        uses: 'tibdex/github-app-token@b62528385c34dbc9f38e5f4225ac829252d1ea92' #v1.7.0
        with:
          app_id: ${{ secrets.GH_APP_ID }}
          private_key: ${{ secrets.GH_PRIVATE_KEY }}

      - name: 'Checkout Repo With Submodule'
        uses: 'actions/checkout@ac593985615ec2ede58e132d2e21d2b1cbd6127c' #v3.1.0
        with:
          repository: ${{ inputs.checkout_repository }}
          token: ${{ steps.gh-app.outputs.token }}
          submodules: ${{ inputs.checkout_submodules }}

      - name: 'Cache Cargo'
        if: ${{ inputs.rust_build }}
        uses: 'actions/cache@88522ab9f39a2ea568f7027eddc7d8d8bc9d59c8' #v3.0.11
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}

      - name: 'Install Rust toolchains (rustfmt, and clippy)'
        uses: 'dtolnay/rust-toolchain@fc3253060d0c959bea12a59f10f8391454a0b02d'
        with:
          profile: minimal
          toolchain: ${{ inputs.toolchain_version }}
          components: rustfmt, clippy
          override: true

      - name: 'Git Config'
        run: |
          git config --global url."https://x-access-token:${{ steps.gh-app.outputs.token }}@github.com".insteadOf "ssh://github.com"

      - name: 'Install tools'
        run: |
          sudo apt-get update
          sudo apt-get install -y cmake pkg-config libssl-dev libpq-dev

      - name: 'Rust Build'
        if: ${{ inputs.rust_build }}
        run: cargo build --release ${{ inputs.build_options }}
        env:
          CARGO_NET_GIT_FETCH_WITH_CLI: true

      - name: 'Run Rust fmt'
        run: cargo fmt --all -- --check

      - name: 'Run clippy'
        run: cargo clippy --all-features -- -D warnings

      - name: 'Run rust test'
        if: ${{ inputs.unittest != false }}
        run: cargo test
        env:
          REDIS_URL: redis://127.0.0.1:6379
